{"remainingRequest":"C:\\Users\\26958\\Desktop\\study\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\26958\\Desktop\\study\\vue-admin-template\\src\\utils\\request.js","dependencies":[{"path":"C:\\Users\\26958\\Desktop\\study\\vue-admin-template\\src\\utils\\request.js","mtime":1647867227493},{"path":"C:\\Users\\26958\\Desktop\\study\\vue-admin-template\\babel.config.js","mtime":1647672900349},{"path":"C:\\Users\\26958\\Desktop\\study\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647674269470},{"path":"C:\\Users\\26958\\Desktop\\study\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js","mtime":1647674291936}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7IE1lc3NhZ2VCb3gsIE1lc3NhZ2UgfSBmcm9tICdlbGVtZW50LXVpJzsKaW1wb3J0IHN0b3JlIGZyb20gJ0Avc3RvcmUnOwppbXBvcnQgeyBnZXRUb2tlbiB9IGZyb20gJ0AvdXRpbHMvYXV0aCc7IC8vIGNyZWF0ZSBhbiBheGlvcyBpbnN0YW5jZQoKdmFyIHNlcnZpY2UgPSBheGlvcy5jcmVhdGUoewogIGJhc2VVUkw6ICcvYXBpJywKICAvLyB1cmwgPSBiYXNlIHVybCArIHJlcXVlc3QgdXJsCiAgLy8gd2l0aENyZWRlbnRpYWxzOiB0cnVlLCAvLyBzZW5kIGNvb2tpZXMgd2hlbiBjcm9zcy1kb21haW4gcmVxdWVzdHMKICB0aW1lb3V0OiA1MDAwIC8vIHJlcXVlc3QgdGltZW91dAoKfSk7IC8vIHJlcXVlc3QgaW50ZXJjZXB0b3IKCnNlcnZpY2UuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICAvLyBkbyBzb21ldGhpbmcgYmVmb3JlIHJlcXVlc3QgaXMgc2VudAogIGlmIChzdG9yZS5nZXR0ZXJzLnRva2VuKSB7CiAgICAvLyBsZXQgZWFjaCByZXF1ZXN0IGNhcnJ5IHRva2VuCiAgICAvLyBbJ1gtVG9rZW4nXSBpcyBhIGN1c3RvbSBoZWFkZXJzIGtleQogICAgLy8gcGxlYXNlIG1vZGlmeSBpdCBhY2NvcmRpbmcgdG8gdGhlIGFjdHVhbCBzaXR1YXRpb24KICAgIGNvbmZpZy5oZWFkZXJzWyd0b2tlbiddID0gZ2V0VG9rZW4oKTsKICB9CgogIHJldHVybiBjb25maWc7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIC8vIGRvIHNvbWV0aGluZyB3aXRoIHJlcXVlc3QgZXJyb3IKICBjb25zb2xlLmxvZyhlcnJvcik7IC8vIGZvciBkZWJ1ZwoKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwp9KTsgLy8gcmVzcG9uc2UgaW50ZXJjZXB0b3IKLy8gc2VydmljZS5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKAovLyAgIC8qKgovLyAgICAqIElmIHlvdSB3YW50IHRvIGdldCBodHRwIGluZm9ybWF0aW9uIHN1Y2ggYXMgaGVhZGVycyBvciBzdGF0dXMKLy8gICAgKiBQbGVhc2UgcmV0dXJuICByZXNwb25zZSA9PiByZXNwb25zZQovLyAgICovCi8vICAgLyoqCi8vICAgICogRGV0ZXJtaW5lIHRoZSByZXF1ZXN0IHN0YXR1cyBieSBjdXN0b20gY29kZQovLyAgICAqIEhlcmUgaXMganVzdCBhbiBleGFtcGxlCi8vICAgICogWW91IGNhbiBhbHNvIGp1ZGdlIHRoZSBzdGF0dXMgYnkgSFRUUCBTdGF0dXMgQ29kZQovLyAgICAqLwovLyAgIHJlc3BvbnNlID0+IHsKLy8gICAgIGNvbnN0IHJlcyA9IHJlc3BvbnNlLmRhdGEKLy8gICAgIC8vIGlmIHRoZSBjdXN0b20gY29kZSBpcyBub3QgMjAwMDAsIGl0IGlzIGp1ZGdlZCBhcyBhbiBlcnJvci4KLy8gICAgIGlmIChyZXMuY29kZSAhPT0gMjAwMDApIHsKLy8gICAgICAgTWVzc2FnZSh7Ci8vICAgICAgICAgbWVzc2FnZTogcmVzLm1lc3NhZ2UgfHwgJ0Vycm9yJywKLy8gICAgICAgICB0eXBlOiAnZXJyb3InLAovLyAgICAgICAgIGR1cmF0aW9uOiA1ICogMTAwMAovLyAgICAgICB9KQovLyAgICAgICAvLyA1MDAwODogSWxsZWdhbCB0b2tlbjsgNTAwMTI6IE90aGVyIGNsaWVudHMgbG9nZ2VkIGluOyA1MDAxNDogVG9rZW4gZXhwaXJlZDsKLy8gICAgICAgaWYgKHJlcy5jb2RlID09PSA1MDAwOCB8fCByZXMuY29kZSA9PT0gNTAwMTIgfHwgcmVzLmNvZGUgPT09IDUwMDE0KSB7Ci8vICAgICAgICAgLy8gdG8gcmUtbG9naW4KLy8gICAgICAgICBNZXNzYWdlQm94LmNvbmZpcm0oJ1lvdSBoYXZlIGJlZW4gbG9nZ2VkIG91dCwgeW91IGNhbiBjYW5jZWwgdG8gc3RheSBvbiB0aGlzIHBhZ2UsIG9yIGxvZyBpbiBhZ2FpbicsICdDb25maXJtIGxvZ291dCcsIHsKLy8gICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAnUmUtTG9naW4nLAovLyAgICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ0NhbmNlbCcsCi8vICAgICAgICAgICB0eXBlOiAnd2FybmluZycKLy8gICAgICAgICB9KS50aGVuKCgpID0+IHsKLy8gICAgICAgICAgIHN0b3JlLmRpc3BhdGNoKCd1c2VyL3Jlc2V0VG9rZW4nKS50aGVuKCgpID0+IHsKLy8gICAgICAgICAgICAgbG9jYXRpb24ucmVsb2FkKCkKLy8gICAgICAgICAgIH0pCi8vICAgICAgICAgfSkKLy8gICAgICAgfQovLyAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKHJlcy5tZXNzYWdlIHx8ICdFcnJvcicpKQovLyAgICAgfSBlbHNlIHsKLy8gICAgICAgcmV0dXJuIHJlcwovLyAgICAgfQovLyAgIH0sCi8vICAgZXJyb3IgPT4gewovLyAgICAgY29uc29sZS5sb2coJ2VycicgKyBlcnJvcikgLy8gZm9yIGRlYnVnCi8vICAgICBNZXNzYWdlKHsKLy8gICAgICAgbWVzc2FnZTogZXJyb3IubWVzc2FnZSwKLy8gICAgICAgdHlwZTogJ2Vycm9yJywKLy8gICAgICAgZHVyYXRpb246IDUgKiAxMDAwCi8vICAgICB9KQovLyAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKQovLyAgIH0KLy8gKQoKc2VydmljZS5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKGZ1bmN0aW9uIChyZXNwb25zZSkgewogIHZhciByZXMgPSByZXNwb25zZS5kYXRhOwogIHJldHVybiByZXM7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOwpleHBvcnQgZGVmYXVsdCBzZXJ2aWNlOw=="},{"version":3,"sources":["C:/Users/26958/Desktop/study/vue-admin-template/src/utils/request.js"],"names":["axios","MessageBox","Message","store","getToken","service","create","baseURL","timeout","interceptors","request","use","config","getters","token","headers","error","console","log","Promise","reject","response","res","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,YAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB,C,CAEA;;AACA,IAAMC,OAAO,GAAGL,KAAK,CAACM,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAE,MADkB;AACV;AACjB;AACAC,EAAAA,OAAO,EAAE,IAHkB,CAGb;;AAHa,CAAb,CAAhB,C,CAMA;;AACAH,OAAO,CAACI,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACE,UAAAC,MAAM,EAAI;AACR;AAEA,MAAIT,KAAK,CAACU,OAAN,CAAcC,KAAlB,EAAyB;AACvB;AACA;AACA;AACAF,IAAAA,MAAM,CAACG,OAAP,CAAe,OAAf,IAA0BX,QAAQ,EAAlC;AACD;;AACD,SAAOQ,MAAP;AACD,CAXH,EAYE,UAAAI,KAAK,EAAI;AACP;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAFO,CAEY;;AACnB,SAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CAhBH,E,CAmBA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAX,OAAO,CAACI,YAAR,CAAqBY,QAArB,CAA8BV,GAA9B,CACE,UAAAU,QAAQ,EAAI;AACV,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAArB;AACE,SAAOD,GAAP;AACH,CAJH,EAKE,UAAAN,KAAK,EAAI;AACP,SAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CAPH;AASA,eAAeX,OAAf","sourcesContent":["import axios from 'axios'\r\nimport { MessageBox, Message } from 'element-ui'\r\nimport store from '@/store'\r\nimport { getToken } from '@/utils/auth'\r\n\r\n// create an axios instance\r\nconst service = axios.create({\r\n  baseURL: '/api', // url = base url + request url\r\n  // withCredentials: true, // send cookies when cross-domain requests\r\n  timeout: 5000 // request timeout\r\n})\r\n\r\n// request interceptor\r\nservice.interceptors.request.use(\r\n  config => {\r\n    // do something before request is sent\r\n\r\n    if (store.getters.token) {\r\n      // let each request carry token\r\n      // ['X-Token'] is a custom headers key\r\n      // please modify it according to the actual situation\r\n      config.headers['token'] = getToken()\r\n    }\r\n    return config\r\n  },\r\n  error => {\r\n    // do something with request error\r\n    console.log(error) // for debug\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// response interceptor\r\n\r\n// service.interceptors.response.use(\r\n//   /**\r\n//    * If you want to get http information such as headers or status\r\n//    * Please return  response => response\r\n//   */\r\n\r\n//   /**\r\n//    * Determine the request status by custom code\r\n//    * Here is just an example\r\n//    * You can also judge the status by HTTP Status Code\r\n//    */\r\n//   response => {\r\n//     const res = response.data\r\n\r\n//     // if the custom code is not 20000, it is judged as an error.\r\n//     if (res.code !== 20000) {\r\n//       Message({\r\n//         message: res.message || 'Error',\r\n//         type: 'error',\r\n//         duration: 5 * 1000\r\n//       })\r\n\r\n//       // 50008: Illegal token; 50012: Other clients logged in; 50014: Token expired;\r\n//       if (res.code === 50008 || res.code === 50012 || res.code === 50014) {\r\n//         // to re-login\r\n//         MessageBox.confirm('You have been logged out, you can cancel to stay on this page, or log in again', 'Confirm logout', {\r\n//           confirmButtonText: 'Re-Login',\r\n//           cancelButtonText: 'Cancel',\r\n//           type: 'warning'\r\n//         }).then(() => {\r\n//           store.dispatch('user/resetToken').then(() => {\r\n//             location.reload()\r\n//           })\r\n//         })\r\n//       }\r\n//       return Promise.reject(new Error(res.message || 'Error'))\r\n//     } else {\r\n//       return res\r\n//     }\r\n//   },\r\n//   error => {\r\n//     console.log('err' + error) // for debug\r\n//     Message({\r\n//       message: error.message,\r\n//       type: 'error',\r\n//       duration: 5 * 1000\r\n//     })\r\n//     return Promise.reject(error)\r\n//   }\r\n// )\r\nservice.interceptors.response.use(\r\n  response => {\r\n    const res = response.data\r\n      return res\r\n  },\r\n  error => {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\nexport default service\r\n"]}]}